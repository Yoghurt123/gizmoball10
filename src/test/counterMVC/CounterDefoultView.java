package test.counterMVC;

import java.awt.Frame;
import java.beans.PropertyChangeEvent;

import javax.swing.JPanel;

import view.abstracts.AbstractView;

public class CounterDefoultView extends JPanel implements AbstractView{

	/**
	 * 
	 */
	private static final long serialVersionUID = -7257538241355080665L;

	CounterController contloller;
	public CounterDefoultView(CounterController c) {
		contloller = c;
		initComponents();
	}
	@Override
	public void modelPropertyChange(PropertyChangeEvent evnt) {
		if(evnt.getPropertyName().equals("counter"))
		{
			
			String newValue = evnt.getNewValue().toString();
			if(!CounterField.getText().equals(newValue))
			{
				CounterField.setText(newValue);
				
			}
		}
		
		
	}
	
	  /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        incCoBut = new javax.swing.JButton();
        DecCouBut = new javax.swing.JButton();
        ResetCouBut = new javax.swing.JButton();
        CounterField = new javax.swing.JTextField();

        
        setLayout(new java.awt.GridBagLayout());

        incCoBut.setText("incrase");
        incCoBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incCoButActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        add(incCoBut, gridBagConstraints);

        DecCouBut.setText("decrase");
        DecCouBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecCouButActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        add(DecCouBut, gridBagConstraints);

        ResetCouBut.setText("reset");
        ResetCouBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetCouButActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        add(ResetCouBut, gridBagConstraints);

        CounterField.setText("0");
        CounterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CounterFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(CounterField, gridBagConstraints);

      
    }// </editor-fold>

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {                          
        System.exit(0);
    }                         

    private void incCoButActionPerformed(java.awt.event.ActionEvent evt) {
        contloller.incrament();
    }

    private void DecCouButActionPerformed(java.awt.event.ActionEvent evt) {
        contloller.decrament();
    }

    private void ResetCouButActionPerformed(java.awt.event.ActionEvent evt) {
        contloller.reset();
    }

    private void CounterFieldActionPerformed(java.awt.event.ActionEvent evt) {
        contloller.changeCounterValue(Integer.parseInt(CounterField.getText()));
    }

   
    // Variables declaration - do not modify
    private javax.swing.JTextField CounterField;
    private javax.swing.JButton DecCouBut;
    private javax.swing.JButton ResetCouBut;
    private javax.swing.JButton incCoBut;
    // End of variables declaration

}
